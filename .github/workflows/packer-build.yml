name: Packer Continuous Integration

on:
  push:
    branches:
      - demo

jobs:
  build_and_test:
    if: github.repository_owner == 'HaochengXuOrg'
    name: Build and Test
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 2001050926
          MYSQL_DATABASE: health_check_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: maven
          cache-dependency-path: ./health-check/pom.xml

      - name: Build and Run Success Test
        working-directory: ./health-check
        run: |
          mvn clean test

      - name: Build artifact
        run: |
          mvn -f ./health-check clean package

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: healthcheck-artifact
          path: |
            ./health-check/target/*.jar


  packer_aws:
    if: github.repository_owner == 'HaochengXuOrg'
    name: Build Packer Image (AWS & GCP)
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Make build-artifact dir
        run: |
          mkdir build-artifact/
        
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: healthcheck-artifact
          path: ./build-artifact

      - name: Verify downloaded artifact
        run: |
          ls -R ./build-artifact/

      - name: Rename artifact for Packer
        run: |
          mv ./build-artifact/health-check-0.0.1-SNAPSHOT.jar ./build-artifact/health-check.jar
          ls -R ./build-artifact/

      - name: Install packer
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "1.12.0"

      - name: Step 5 - Run `packer init`
        id: init
        run: |
          packer init ./packer-template.pkr.hcl

      - name: Validate AWS Packer template
        id: validate
        run: |
          packer validate --var-file=packer-template.pkrvars.hcl ./packer-template.pkr.hcl

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Build AWS Image
        run: |
          packer build --var-file=packer-template.pkrvars.hcl ./packer-template.pkr.hcl

      - name: Extract Artifact IDs
        run: |
          GCP_IMAGE=$(jq -r '.builds[] | select(.name | contains("gcp_image")) | .artifact_id | split("/")[-1]' packer-manifest.json)
          echo "GCP_IMAGE_NAME=$GCP_IMAGE" >> $GITHUB_ENV

      - name: Share GCP Image
        run: |
            gcloud compute images add-iam-policy-binding ${{ env.GCP_IMAGE_NAME }} \
                --project=${{ secrets.GCP_PROJECT_ID }} \
                --member="serviceAccount:demo-acc@csye6225-demo-452104.iam.gserviceaccount.com" \
                --role="roles/compute.imageUser"